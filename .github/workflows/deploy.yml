name: Docker CI

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          docker build -t $DOCKER_USERNAME/go-blog:latest .
          docker push $DOCKER_USERNAME/go-blog:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2 (Copy File Explicitly)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          host_key_checking: false # Temporarily disabled - address for production
          script: |
            # Define source and target paths
            SOURCE_FILE="/github/workspace/golang-simple-blog-app/docker-compose.yml"
            TARGET_DIR="/home/${{ secrets.EC2_USERNAME }}/golang-simple-blog-app"
            TARGET_FILE="$TARGET_DIR/docker-compose.yml"

            # Create target directory if it doesn't exist
            mkdir -p $TARGET_DIR
            echo "Target directory $TARGET_DIR created or already exists."

            # Explicitly copy the file using scp within the SSH session
            # Note: This relies on the ssh-action properly setting up the key for scp
            echo "Attempting to copy $SOURCE_FILE to $TARGET_FILE"
            scp $SOURCE_FILE ${{ secrets.EC2_USERNAME }}@localhost:$TARGET_FILE
            # Check scp exit status
            if [ $? -ne 0 ]; then
              echo "Error: SCP file transfer failed."
              exit 1
            fi
            echo "File copied successfully."

            # Change to target directory
            cd $TARGET_DIR
            echo "Changed directory to $PWD"

            # Verify docker-compose.yml exists after copy
            if [ ! -f docker-compose.yml ]; then
              echo "Error: docker-compose.yml not found in $PWD after explicit copy."
              exit 1
            fi
            echo "docker-compose.yml found in $PWD."

            # Pull the latest image and restart containers
            echo "Running docker-compose commands..."
            docker-compose pull app
            docker-compose down
            docker-compose up -d 